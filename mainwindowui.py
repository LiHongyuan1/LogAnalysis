# -*- coding: utf-8 -*-
# Android Logging Tool
# This tool help tester analyse Android Logging
# Version : beta

import resource
from PyQt5 import QtCore, QtWidgets, QtGui
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QAction, QHeaderView


class Ui_MainWindow(object):
    row = 0
    line = 0

    def __init__(self):
        pass

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1300, 700)
        MainWindow.setWindowIcon(QtGui.QIcon(':/sync.PNG'))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setShowGrid(False)
        # 根据表格内容动态调整行高
        self.tableWidget.verticalHeader().setSectionResizeMode(QHeaderView.Stretch)
        # 设置选中行
        self.tableWidget.setSelectionBehavior(self.tableWidget.SelectRows)
        # 设置单元格不允许编辑
        self.tableWidget.setEditTriggers(self.tableWidget.NoEditTriggers)
        # self.tableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        # self.tableWidget.horizontalHeader().setSectionResizeMode(0, QHeaderView.Interactive)
        self.tableWidget.setColumnWidth(0, 60)
        self.tableWidget.setColumnWidth(2, 60)
        self.tableWidget.setColumnWidth(3, 60)
        self.tableWidget.setColumnWidth(4, 60)
        self.tableWidget.setColumnWidth(5, 200)
        self.tableWidget.setColumnWidth(6, 1000)
        for _ in range(0, 7):
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setHorizontalHeaderItem(_, item)

        self.gridLayout.addWidget(self.tableWidget, 0, 0, 1, 1)
        self.verticalScrollBar = QtWidgets.QScrollBar(self.centralwidget)
        self.verticalScrollBar.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar.setObjectName("verticalScrollBar")
        self.gridLayout.addWidget(self.verticalScrollBar, 0, 1, 1, 1)

        MainWindow.setCentralWidget(self.centralwidget)

        # MainWindow.setCentralWidget(self.scrollbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1027, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        self.menu_4 = QtWidgets.QMenu(self.menubar)
        self.menu_4.setObjectName("menu_4")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(self.toolBar)  # 把工具栏锁定
        self.toolBar.addSeparator()
        button_action2 = QAction(QIcon(':/filter.PNG'), "Filter Tool button", self)
        button_action2.setStatusTip("Filter window")
        button_action2.setCheckable(True)
        self.toolBar.addAction(button_action2)

        button_action3 = QAction(QIcon(':/clear.PNG'), "clean log button", self)
        button_action3.setStatusTip("clean all display sync+ log")
        button_action3.setCheckable(True)
        button_action3.triggered.connect(self.clearData)
        self.toolBar.addAction(button_action3)

        button_action4 = QAction(QIcon(':/renew.PNG'), "recovery button", self)
        button_action4.setStatusTip("recovery sync+ log")
        button_action4.setCheckable(True)
        button_action4.triggered.connect(self.displayAllData)
        self.toolBar.addAction(button_action4)

        button_action5 = QAction(QIcon(':/find.PNG'), "find target button", self)
        button_action5.setStatusTip("find target by keyword")
        button_action5.setCheckable(True)
        button_action5.triggered.connect(self.keyworddisplay)
        self.toolBar.addAction(button_action5)

        button_action6 = QAction(QIcon(':/highlight.PNG'), "HighLight button", self)
        button_action6.setStatusTip("HighLight key word")
        button_action6.setCheckable(True)
        button_action6.triggered.connect(self.layoutSearch)
        self.toolBar.addAction(button_action6)

        button_action7 = QAction(QIcon(':/previous.PNG'), "find previous keyword", self)
        button_action7.setStatusTip("find previous keyword")
        button_action7.setCheckable(True)
        button_action7.triggered.connect(self.layoutSearchPrevious)
        self.toolBar.addAction(button_action7)

        button_action8 = QAction(QIcon(':/next.PNG'), "find next keyword", self)
        button_action8.setStatusTip("find next keyword")
        button_action8.setCheckable(True)
        button_action8.triggered.connect(self.layoutSearchNext)
        self.toolBar.addAction(button_action8)

        button_action9 = QAction(QIcon(':/mark.PNG'), "Marks the selected row ", self)
        button_action9.setStatusTip("Marks the selected row")
        button_action9.setCheckable(True)
        button_action9.triggered.connect(self.markSelectedRow)
        self.toolBar.addAction(button_action9)

        button_action10 = QAction(QIcon(':/cancelmark.PNG'), "Cancel Marks the selected row ", self)
        button_action10.setStatusTip("Cancel Marks")
        button_action10.setCheckable(True)
        button_action10.triggered.connect(self.CancelMarkSelectedRow)
        self.toolBar.addAction(button_action10)

        self.actionopen = QtWidgets.QAction(MainWindow)
        self.actionopen.setObjectName("actionopen")
        self.actionSave_File = QtWidgets.QAction(MainWindow)
        self.actionSave_File.setObjectName("actionSave_File")
        self.actionFilter = QtWidgets.QAction(MainWindow)
        self.actionFilter.setObjectName("actionFilter")
        self.menu.addAction(self.actionopen)
        self.menu.addAction(self.actionSave_File)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())
        self.menubar.addAction(self.menu_4.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionFilter)

        # add Qdockwidget
        self.dockWidget = QtWidgets.QDockWidget(MainWindow)
        self.dockWidget.setObjectName("dockWidget")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.widget = QtWidgets.QWidget(self.dockWidgetContents_2)
        self.widget.setGeometry(QtCore.QRect(0, 10, 400, 550))
        self.widget.setObjectName("widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.setPlaceholderText("Date")
        self.verticalLayout.addWidget(self.lineEdit)
        self.lineEdit_11 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_11.setText("")
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.lineEdit_11.setPlaceholderText("TimeStamp")
        self.verticalLayout.addWidget(self.lineEdit_11)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.setPlaceholderText("Process")
        self.verticalLayout.addWidget(self.lineEdit_2)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_3.setPlaceholderText("Thread")
        self.verticalLayout.addWidget(self.lineEdit_3)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_4.setText("")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_4.setPlaceholderText("Level")
        self.verticalLayout.addWidget(self.lineEdit_4)
        self.lineEdit_9 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_9.setText("")
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.lineEdit_9.setPlaceholderText("Tag")
        self.verticalLayout.addWidget(self.lineEdit_9)
        self.lineEdit_10 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_10.setText("")
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.lineEdit_10.setPlaceholderText("Message")
        self.verticalLayout.addWidget(self.lineEdit_10)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.toolButton = QtWidgets.QToolButton(self.widget)
        self.toolButton.setObjectName("toolButton")

        self.horizontalLayout.addWidget(self.toolButton)
        self.toolButton_2 = QtWidgets.QToolButton(self.widget)
        self.toolButton_2.setObjectName("toolButton_2")
        self.horizontalLayout.addWidget(self.toolButton_2)
        self.toolButton_3 = QtWidgets.QToolButton(self.widget)
        self.toolButton_3.setObjectName("toolButton_3")
        self.horizontalLayout.addWidget(self.toolButton_3)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.dockTableWidget = QtWidgets.QTableWidget(self.widget)
        self.dockTableWidget.setObjectName("dockTableWidget")
        self.dockTableWidget.setColumnCount(8)
        self.dockTableWidget.setRowCount(0)
        self.dockTableWidget.setColumnWidth(0, 30)
        self.dockTableWidget.setColumnWidth(1, 5)
        self.dockTableWidget.setColumnWidth(2, 5)
        self.dockTableWidget.setColumnWidth(3, 60)
        self.dockTableWidget.setColumnWidth(4, 60)
        self.dockTableWidget.setColumnWidth(5, 40)
        self.dockTableWidget.setColumnWidth(6, 30)
        self.dockTableWidget.setColumnWidth(7, 170)
        self.dockTableWidget.hideColumn(1)
        self.dockTableWidget.hideColumn(2)
        dockitem = QtWidgets.QTableWidgetItem()
        self.dockTableWidget.setHorizontalHeaderItem(0, dockitem)
        dockitem = QtWidgets.QTableWidgetItem()
        self.dockTableWidget.setHorizontalHeaderItem(1, dockitem)
        dockitem = QtWidgets.QTableWidgetItem()
        self.dockTableWidget.setHorizontalHeaderItem(2, dockitem)
        dockitem = QtWidgets.QTableWidgetItem()
        self.dockTableWidget.setHorizontalHeaderItem(3, dockitem)
        dockitem = QtWidgets.QTableWidgetItem()
        self.dockTableWidget.setHorizontalHeaderItem(4, dockitem)
        dockitem = QtWidgets.QTableWidgetItem()
        self.dockTableWidget.setHorizontalHeaderItem(5, dockitem)
        dockitem = QtWidgets.QTableWidgetItem()
        self.dockTableWidget.setHorizontalHeaderItem(6, dockitem)
        dockitem = QtWidgets.QTableWidgetItem()
        self.dockTableWidget.setHorizontalHeaderItem(7, dockitem)
        self.verticalLayout_2.addWidget(self.dockTableWidget)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.toolButton_4 = QtWidgets.QToolButton(self.widget)
        self.toolButton_4.setObjectName("toolButton_4")
        self.horizontalLayout_2.addWidget(self.toolButton_4)
        self.toolButton_5 = QtWidgets.QToolButton(self.widget)
        self.toolButton_5.setObjectName("toolButton_5")
        self.horizontalLayout_2.addWidget(self.toolButton_5)
        self.toolButton_6 = QtWidgets.QToolButton(self.widget)
        self.toolButton_6.setObjectName("toolButton_6")
        self.horizontalLayout_2.addWidget(self.toolButton_6)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.verticalLayout_3.addLayout(self.verticalLayout_2)
        self.dockWidget.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockWidget)
        self.retranslateUi(MainWindow)
        button_action2.triggered.connect(self.dockWidgetShow)
        self.toolButton.clicked.connect(self.addDockTableData)
        self.toolButton_2.clicked.connect(self.deleteDockTableData)
        self.toolButton_3.clicked.connect(self.clearDockTableData)
        self.toolButton_4.clicked.connect(self.loadKeywordJsonFile)
        self.toolButton_5.clicked.connect(self.saveKeywordJsonFile)
        self.toolButton_6.clicked.connect(self.applyKeywordJsonFileNew)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Sync+ Logging Tool"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Date"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Timestamp"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Process"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Thread"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Level"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Tag"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Message"))
        # __sortingEnabled = self.tableWidget.isSortingEnabled()
        # self.tableWidget.setSortingEnabled(False)
        self.menu.setTitle(_translate("MainWindow", "File"))
        self.menu_2.setTitle(_translate("MainWindow", "Edit"))
        self.menu_3.setTitle(_translate("MainWindow", "View"))
        self.menu_4.setTitle(_translate("MainWindow", "Tools"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionopen.setText(_translate("MainWindow", "Open File"))
        self.actionSave_File.setText(_translate("MainWindow", "Save File"))
        self.actionFilter.setText(_translate("MainWindow", "TODO"))

        self.toolButton.setText(_translate("MainWindow", "Add"))
        self.toolButton_2.setText(_translate("MainWindow", "Delete"))
        self.toolButton_3.setText(_translate("MainWindow", "Clear"))

        dockitem = self.dockTableWidget.horizontalHeaderItem(0)
        dockitem.setText(_translate("MainWindow", "Use"))
        dockitem = self.dockTableWidget.horizontalHeaderItem(1)
        dockitem.setText(_translate("MainWindow", "Date"))
        dockitem = self.dockTableWidget.horizontalHeaderItem(2)
        dockitem.setText(_translate("MainWindow", "TimeStamp"))
        dockitem = self.dockTableWidget.horizontalHeaderItem(3)
        dockitem.setText(_translate("MainWindow", "Process"))
        dockitem = self.dockTableWidget.horizontalHeaderItem(4)
        dockitem.setText(_translate("MainWindow", "Thread"))
        dockitem = self.dockTableWidget.horizontalHeaderItem(5)
        dockitem.setText(_translate("MainWindow", "Level"))
        dockitem = self.dockTableWidget.horizontalHeaderItem(6)
        dockitem.setText(_translate("MainWindow", "Tag"))
        dockitem = self.dockTableWidget.horizontalHeaderItem(7)
        dockitem.setText(_translate("MainWindow", "Message"))
        self.toolButton_4.setText(_translate("MainWindow", "Load Filters"))
        self.toolButton_5.setText(_translate("MainWindow", "Save Filters"))
        self.toolButton_6.setText(_translate("MainWindow", "Apply Filters"))

    def resizeEvent(self, a0: QtGui.QResizeEvent) -> None:
        self.calculateRowCountParams()
        self.pdToQTableWidget()
        if a0:
            super().resizeEvent(a0)

    def close(self):
        self.dockWidget.close()
